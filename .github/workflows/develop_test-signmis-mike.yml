# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - test-signmis-mike

on:
  push:
    branches:
      - develop_release
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring,mailparse-3.1.3
        env:          
          MAILPARSE_CONFIGURE_OPTS: --enable-mailparse
          
      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: 'composer.json'

      - name: cache vendor
        id: cache
        uses: actions/cache@v3
        with:
          path: ./vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

     # - name: Run composer install if composer.json exists
     #   if: steps.check_files.outputs.files_exists == 'true'
     #   run: composer validate --no-check-publish && composer install --prefer-dist --no-progress --ignore-platform-req=ext-mailparse

     # - name: Dump Auto Load
     #   run: php composer.phar dump-autoload

     # - name: Artisan Optimize
     #   run: php artisan optimize

      - name: Copy .env
        run: cp .env_git_action_prod .env
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cahce Clear
        run: npm cache clean --force

      - name: Install Dependencies
        run: |
          npm install serverless -g
          npm install        
          
      - name: Npm run Prod
        run: npm run prod

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: php-app
          path:  |
            app/            
            bootstrap/
            config/
            public/
            resources/asset/
            resources/views/
            routes/
          # vendor/autoload.php

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'test-signmis-mike'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_8784183909ED4057BB66464DD1ED0B82 }}
          package: .
