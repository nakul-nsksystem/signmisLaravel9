{{#*inline "dataPartial"}}
{{#each tables as |table|}}
{{#if comment}}

/** {{comment}} */
{{/if}}
export class {{interfaceName}} {{#if extends}}extends {{extends}} {{/if}}{
  {{#each additionalProperties as |prop|}}
  {{prop}}
  {{/each}}
  {{#each columns}}
  {{#if comment}}
  
  /** {{comment}} */
  {{/if}}
  {{propertyName}}?: {{propertyType}} ;
  {{/each}}

  public static parse(obj:Partial<{{interfaceName}}>){
      const row = new {{interfaceName}}(obj.created_m_user_id ?? 0 ) ;  
      Object.assign(row, obj);
      return row ; 
  }

  public static is(arg:any):arg is {{interfaceName}} { 
      if ( arg?.{{interfaceName}} === undefined) return false ; 
      return arg.{{interfaceName}} ; 
  } 
}
{{/each}}


{{#each enums as |enum|}}
export enum {{convertedName}} {
{{#each values as |value|}}
  '{{value.convertedKey}}' = {{handleNumeric value.value}},
{{/each}}
}
{{/each}}
{{/inline}}
/*
* This file was generated by a tool.
* Rerun sql-ts to regenerate this file.
*/
{{#if config.schemaAsNamespace}}
{{#each grouped as |group key|}}
export namespace {{key}} {
  {{> dataPartial group}}
}
{{/each}}
{{else}}
{{#each grouped as |group key|}}
{{> dataPartial group }}
{{/each}}
{{/if}}
